// components/SilhouetteAnimation.tsx
'use client'

import React, { useEffect, useRef } from 'react'
import { gsap } from 'gsap'
import { DrawSVGPlugin } from 'gsap/DrawSVGPlugin'

// register DrawSVG
gsap.registerPlugin(DrawSVGPlugin)

// This import points to your file in /public/vectors/stitched-silhouette-vector.svg
import Silhouette from '../../public/vectors/home-page-vector-black-red.svg'

export default function SilhouetteAnimation() {
  // ref to the top-level <svg> that SVGR gives us
  const svgRef = useRef<SVGSVGElement>(null)

    useEffect(() => {
        if (!svgRef.current) return

        const paths = Array.from(
        svgRef.current.querySelectorAll('path')
        ) as SVGPathElement[]

        //
        // ── CONFIGURE THESE ───────────────────────────────────────────────
        //
        const drawDuration  = 10  // seconds each path takes to draw
        const totalStagger  = 5   // total seconds to stagger across all paths
        const animationEase = 'power1.out'
        //
        // ───────────────────────────────────────────────────────────────────
        //

        // Prepare & measure
        const infos = paths.map((path) => {
        const len = path.getTotalLength()
        gsap.set(path, {
            strokeDasharray: len,
            strokeDashoffset: len,
            visibility: 'visible',
        })
        const { x } = path.getBBox()
        return { path, x }
        })

        // Sort left→right
        infos.sort((a, b) => a.x - b.x)
        const sortedPaths = infos.map((i) => i.path)

        // Animate draw with stagger
        gsap.timeline()
        .to(sortedPaths, {
            strokeDashoffset: 0,
            duration: drawDuration,
            ease: animationEase,
            stagger: {
            amount: totalStagger,
            from: 0,          // start stagger at first (leftmost) path
            },
        })
    }, [])

  return (
    <div className="w-full h-screen bg-black flex items-center justify-center">
      {/* 
        Silhouette is the React component generated by SVGR.
        We forward a ref so we can query its <path> elements.
      */}
      <Silhouette
        ref={svgRef}
        className="max-w-full h-screen"
        style={{ visibility: 'hidden' }}
      />
    </div>
  )
}
